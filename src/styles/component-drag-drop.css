/* Component Drag & Drop Styles
   These styles provide enhanced drag and drop visualization for the widget builder
*/

/* Base component container styles */
.component-container {
    position: relative;
    width: 100%;
    margin-bottom: 8px;
    transition: all 0.15s ease-out;
    border-radius: var(--radius-md);
}

/* Component selection state - the high specificity is intentional */
.component-container.selected-component,
[data-selected="true"] {
    outline: 2px solid var(--color-accent-dark-bright) !important;
    z-index: 10 !important;
    box-shadow: 0 0 0 1px rgba(232, 174, 101, 0.5),
        0 0 8px rgba(232, 174, 101, 0.3) !important;
}

/* Dragging state */
.dragging-component {
    opacity: 0.7 !important;
    cursor: grabbing !important;
    z-index: 1000 !important;
    transform: scale(1.02) !important;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2) !important;
    outline: 2px dashed var(--color-accent-dark-bright) !important;
}

/* Drop target indicators */
[data-drop-before="true"]::before {
    content: "";
    position: absolute;
    top: -2px;
    left: 0;
    right: 0;
    height: 4px;
    background-color: var(--color-accent-dark-bright);
    border-radius: 2px;
    box-shadow: 0 0 4px rgba(232, 174, 101, 0.5);
    z-index: 200;
    animation: pulse 1.5s infinite;
}

[data-drop-after="true"]::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 4px;
    background-color: var(--color-accent-dark-bright);
    border-radius: 2px;
    box-shadow: 0 0 4px rgba(232, 174, 101, 0.5);
    z-index: 200;
    animation: pulse 1.5s infinite;
}

[data-drop-inside="true"] {
    background-color: rgba(232, 174, 101, 0.1) !important;
    box-shadow: inset 0 0 8px rgba(232, 174, 101, 0.2) !important;
}

/* Empty container styling */
.empty-container {
    min-height: 80px !important;
    border: 2px dashed rgba(100, 100, 100, 0.3) !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
}

/* Container styling for different component types */
.container-component {
    min-height: 40px;
}

.component-type-panel,
.component-type-scrollbox {
    min-height: 60px;
}

/* Children containers */
.panel-children-container,
.scrollbox-children-container {
    position: relative;
    width: 100%;
    min-height: 40px;
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding: 8px;
}

/* Delete button */
.delete-button {
    position: absolute;
    top: 4px;
    right: 4px;
    width: 20px;
    height: 20px;
    background-color: rgba(30, 30, 30, 0.7);
    color: rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    cursor: pointer;
    opacity: 0;
    transition: all 0.2s ease;
    z-index: 50;
}

.component-container:hover .delete-button {
    opacity: 0.7;
}

.component-container.selected-component .delete-button,
[data-selected="true"] .delete-button {
    opacity: 1 !important;
}

.delete-button:hover {
    opacity: 1 !important;
    background-color: #ef4444 !important;
    color: white !important;
}

/* Animation for drop indicators */
@keyframes pulse {
    0% {
        opacity: 0.8;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0.8;
    }
}

/* Edit mode specific styles */
[data-edit-mode="true"] .component-container:hover {
    outline: 1px solid rgba(232, 174, 101, 0.3);
}

/* Hover styles for container components in edit mode */
[data-edit-mode="true"] .component-container[data-is-container="true"]:hover {
    outline: 2px dashed rgba(232, 174, 101, 0.6) !important;
    background-color: rgba(232, 174, 101, 0.05) !important;
}

/* ====== NEW WIDGET OVERLAY STYLES ====== */

/* Widget Drop Overlay */
.widget-drop-overlay {
    position: absolute;
    inset: 0;
    pointer-events: none; /* Only capture events during drag */
    z-index: 1000;
    transition: background-color 0.2s ease;
}

.widget-drop-overlay[data-drop-active="true"] {
    background-color: rgba(232, 174, 101, 0.05);
    box-shadow: inset 0 0 0 3px rgba(232, 174, 101, 0.2);
}

.widget-drop-overlay[data-can-drop="false"] {
    background-color: rgba(239, 68, 68, 0.05);
    box-shadow: inset 0 0 0 3px rgba(239, 68, 68, 0.2);
}

/* Cursor feedback */
.widget-drop-overlay[data-can-drop="true"] {
    cursor: copy;
}

.widget-drop-overlay[data-can-drop="false"] {
    cursor: no-drop;
}

/* Widget as drop target */
.widget-drop-target {
    background-color: rgba(232, 174, 101, 0.1);
    box-shadow: inset 0 0 0 3px rgba(232, 174, 101, 0.3);
}

/* Debug info panel for development - hidden in production */
.widget-drop-overlay-debug-info {
    position: absolute;
    top: 4px;
    right: 4px;
    padding: 4px 8px;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    font-size: 12px;
    border-radius: 4px;
    z-index: 1100;
}

/* Z-index management for proper layering */
.widget-node {
    position: relative; /* Establish stacking context */
}

.widget-node .widget-content {
    position: relative;
    z-index: 1; /* Base level for content */
}

.widget-drop-overlay {
    z-index: 1000; /* Highest - above everything */
}

.drop-indicator {
    z-index: 100; /* High - above components */
}

.delete-button {
    z-index: 200; /* Very high - above drop indicators */
}

.component-container {
    z-index: 1; /* Base level */
}

/* Deeper components get slightly higher z-index */
.component-container .component-container {
    z-index: 2;
}

.component-container .component-container .component-container {
    z-index: 3;
}

/* Special highlight for drop targets */
.component-container.drop-highlight {
    outline: 2px dashed var(--color-accent-dark-bright) !important;
    background-color: rgba(232, 174, 101, 0.05) !important;
}

/* Make drop indicators more visible and consistent */
[data-drop-before="true"]::before {
    content: "";
    position: absolute;
    top: -3px;
    left: 0;
    right: 0;
    height: 6px; /* Make it thicker */
    background-color: #3b82f6;
    border-radius: 3px;
    box-shadow: 0 0 8px rgba(59, 130, 246, 0.5),
        0 0 0 2px rgba(59, 130, 246, 0.3);
    z-index: 200;
    animation: drop-indicator-pulse 1.5s infinite;
    pointer-events: none;
}

[data-drop-after="true"]::after {
    content: "";
    position: absolute;
    bottom: -3px;
    left: 0;
    right: 0;
    height: 6px; /* Make it thicker */
    background-color: #3b82f6;
    border-radius: 3px;
    box-shadow: 0 0 8px rgba(59, 130, 246, 0.5),
        0 0 0 2px rgba(59, 130, 246, 0.3);
    z-index: 200;
    animation: drop-indicator-pulse 1.5s infinite;
    pointer-events: none;
}

[data-drop-inside="true"] {
    box-shadow: inset 0 0 0 3px rgba(59, 130, 246, 0.5),
        0 0 8px rgba(59, 130, 246, 0.3) !important;
    background-color: rgba(59, 130, 246, 0.05) !important;
    border-radius: 4px;
}

/* Ensure drop indicators in containers stand out */
.component-container[data-drop-inside="true"] > .children-container {
    outline: 3px dashed rgba(59, 130, 246, 0.5) !important;
    background-color: rgba(59, 130, 246, 0.05) !important;
    border-radius: 4px;
}

/* Add distinct cursor styles for different drop positions */
.component-container[data-drop-before="true"] {
    cursor: s-resize !important;
}

.component-container[data-drop-after="true"] {
    cursor: n-resize !important;
}

.component-container[data-drop-inside="true"] {
    cursor: copy !important;
}

/* Add a pulsing animation specifically for drop indicators */
@keyframes drop-indicator-pulse {
    0% {
        opacity: 0.7;
        box-shadow: 0 0 5px rgba(59, 130, 246, 0.5),
            0 0 0 1px rgba(59, 130, 246, 0.3);
    }
    50% {
        opacity: 1;
        box-shadow: 0 0 10px rgba(59, 130, 246, 0.7),
            0 0 0 2px rgba(59, 130, 246, 0.5);
    }
    100% {
        opacity: 0.7;
        box-shadow: 0 0 5px rgba(59, 130, 246, 0.5),
            0 0 0 1px rgba(59, 130, 246, 0.3);
    }
}

/* Styles for active cross-widget drag operations */
.cross-widget-drag-active .widget-node {
    transition: outline 0.2s ease, background-color 0.2s ease;
}

/* Style for widget that can receive components during a cross-widget drag */
.cross-widget-drag-active .widget-node:not([data-edit-mode="false"]) {
    outline: 2px dashed rgba(59, 130, 246, 0.3);
    outline-offset: 4px;
}

/* Style for widget being hovered during cross-widget drag */
.cross-widget-drag-active .widget-node:not([data-edit-mode="false"]):hover {
    outline: 2px dashed rgba(59, 130, 246, 0.7);
    background-color: rgba(59, 130, 246, 0.05);
}

/* Style for the component currently being dragged */
[data-cross-widget-drag="true"] {
    opacity: 0.7;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.6);
    position: relative;
    z-index: 999 !important;
}

/* Style for drop target indicators during cross-widget operations */
.cross-widget-drop-indicator {
    background-color: rgba(59, 130, 246, 0.2);
    border: 2px dashed #3b82f6;
    border-radius: 4px;
    position: absolute;
    pointer-events: none;
    animation: pulse 1.5s infinite;
}

/* Special indicator for dropping between widgets */
.widget-drop-separator {
    height: 4px;
    background-color: #3b82f6;
    margin: 8px 0;
    border-radius: 2px;
    transition: height 0.2s ease;
}

.widget-drop-separator:hover {
    height: 8px;
}

/* Add opacity pulse animation for indicators */
@keyframes pulse {
    0% {
        opacity: 0.4;
    }
    50% {
        opacity: 0.8;
    }
    100% {
        opacity: 0.4;
    }
}
